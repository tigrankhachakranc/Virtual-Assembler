# Virtual assembly file
# Test variable declarations, labels and all available commands

STACK 1024

# Variables section 
STRING str1 = "Hello World!"

BYTE bVal1 = 1
BYTE bVal2 = 'A'
BYTE bVal3 = 0x4F
BYTE bVal4[10] = 10,20,30,40,50,60,70,80,90,0xF0

WORD wVal1
WORD wVal2 = 10000
WORD wVal3 = 0x0100
WORD wVal4[5] = 100,200,300,400

DWORD dwVal1 = -1
DWORD dwVal2 = 10000000
DWORD dwVal3 = 0xA0B0C0D0
DWORD dwVal4[5]

QWORD qwVal1 = -10
QWORD qwVal2 = 10000000000
QWORD qwVal3 = 0x1080A0B0C0D0E0F0
QWORD qwVal4[5]

NOP
JUMP start
start:
CALL TestFunc

ASSIGN QW R0,0x0F0E0D0C0B0A0908
ASSIGN QW R8,0x0102030405060708
ASSIGN R16 10000

MOVE R20, R0 
MOVE B R20, R0 
MOVE W R20, R0 
MOVE DW R20, R0 
MOVE QW R20, R0 

SWAP R20, R28 
SWAP B R20, R28 
SWAP W R20, R28 
SWAP DW R20, R28 
SWAP QW R20, R28 

AND R0,R8,R16
AND B  R0,R8,R16
AND W  R0,R8,R16
AND DW R0,R8,R16
AND QW R0,R8,R16

JZ exit

ADD R0,R8,R16
ADD B  R0,R8,R16
ADD W  R0,R8,R16
ADD DW R0,R8,R16
ADD QW R0,R8,R16

PUSH R0
POP R28
PUSH B R0
POP B R28
PUSH W R0
POP W R28
PUSH DW R0
POP DW R28
PUSH QW R0
POP QW R28
PUSHF
POPF

LOAD B R0,bVal1 
LOAD W R0,wVal1 
LOAD DW R0,dwVal1 
LOAD QW R0,qwVal1 

STORE B R10,bVal1 
STORE W R10,wVal1 
STORE DW R10,dwVal1 
STORE QW R10,qwVal1 

OUT R0,0
loop:
IN R0,0
CMP R0,0
JNE loop

TET R0,R0
JZ exit
BREAK

exit:
EXIT


TestFunct
RET