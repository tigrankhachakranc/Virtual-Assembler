# Virtual assembly file
# Test variable declarations, labels and all available commands

.STACK = 1024

.DATA

# Variables section
CHAR var;
CHAR var
CHAR var;

CHAR str1[] = "Hello World!"
CHAR ch1 = 'A'

BYTE bVal1;

BYTE bVal0
BYTE bVal1 = 1
BYTE bVal2 = 255
BYTE bVal3[] = 0x4F,0x0F
BYTE bVal4[10] = 10,20,30,40,50,60,70,80,90,0xF0

WORD wVal1;

WORD wVal1
WORD wVal2 = 10000
WORD wVal3 = 0x0100
WORD wVal4[5] = 100,200,300,400

DWORD dwVal1 = -1
DWORD dwVal2 = 10000000
DWORD dwVal3 = 0xA0B0C0D0
DWORD dwVal4[5]
DWORD dwVal5[4] = 0, 100, 0, 0xAAAAAAAA

QWORD qwVal1 = -10
QWORD qwVal2 = 10000000000
QWORD qwVal3 = 0x1080A0B0C0D0E0F0
QWORD qwVal4[5]
QWORD qwVal5 = 0xFFFFFFFFFFFFFFFF
QWORD qwVal6 = 0x8000000000000000
QWORD qwVal7[4] = 0, 0xFFFF, 0, 188900967592960

.CODE

Func F1;
Func F2;

Func Main:
	JUMP start
	NOP
	NOP
	NOP
start:
	ASSIGN A4, F1
	CALL A4
	ASSIGN A4, F2
	CALL A4
	RET
EndF

Func F1 :
	ASSIGN QW R0,0x0F0E0D0C0B0A0908
	ASSIGN QW R8,0x0102030405060708
	ASSIGN R16, 10000

	MOVE R20, R0 
	MOVE B R20, R0 
	MOVE W R20, R0 
	MOVE DW R20, R0 
	MOVE QW R24, R0 

	SWAP R20, R28 
	SWAP B R20, R28 
	SWAP W R20, R28 
	SWAP DW R20, R28 
	SWAP QW R16, R24 

Label1:
	AND R0,R8
	AND B  R0,R8
	AND W  R0,R8
	AND DW R0,R8
	AND QW R0,R8

	JZ Label2

	ADD R0,R8
	ADD B  R0,R8
	ADD W  R0,R8
	ADD DW R0,R8
	ADD QW R0,R8

Label2:
	PUSH R0
	POP R28
	PUSH B R0
	POP B R28
	PUSH W R0
	POP W R28
	PUSH DW R0
	POP DW R28
	PUSH QW R0
	POP QW R24
	GFLR R16
	SFLR R16

	RET
EndF

Func F2:
	ASSIGN A2,bVal1 
	ASSIGN A3,wVal1 
	ASSIGN A4,dwVal1 
	ASSIGN A5,qwVal1 

	LOAD B R0,A2
	LOAD W R0,A3
	LOAD DW R0,A4
	LOAD QW R0,A5

	STORE B R10,A2
	STORE W R10,A3
	STORE DW R12,A4
	STORE QW R16,A5

	OUT R0,0
Loop:
	IN R0,1
	BREAK
	ASSIGN R4, 0
	CMP R0, R4
	JNE Loop

	TEST R0,R0
	JZ Exit
	BREAK

Exit:
	RET
EndF

.MAIN = Main
