.STACK = 1024

.DATA

CHAR  var
CHAR  str1[] = "Hello World!"
CHAR  ch1	= 'A'
BYTE  bVal1	= 1
BYTE  bVal0	= 0
BYTE  bVal2	= 255
BYTE  bVal3[2]	= 79, 15
BYTE  bVal4[10]	= 10, 20, 30, 40, 50, 60, 70, 80, 90, 240
WORD  wVal1	= 0
WORD  wVal2	= 10000
WORD  wVal3	= 256
WORD  wVal4[5]	= 100, 200, 300, 400, 0
DWORD dwVal1	= 0xFFFFFFFF
DWORD dwVal2	= 0x989680
DWORD dwVal3	= 0xA0B0C0D0
DWORD dwVal4[5]	= 0, 0, 0, 0, 0
DWORD dwVal5[4]	= 0, 0x64, 0, 0xAAAAAAAA
QWORD qwVal1	= 0xFFFFFFFFFFFFFFF6
QWORD qwVal2	= 0x2540BE400
QWORD qwVal3	= 0x1080A0B0C0D0E0F0
QWORD qwVal4[5]	= 0, 0, 0, 0, 0
QWORD qwVal5	= 0xFFFFFFFFFFFFFFFF
QWORD qwVal6	= 0x8000000000000000
QWORD qwVal7[4]	= 0, 0xFFFF, 0, 0xABCDEF123400


.CODE

Func F1;	# Unit: test1
Func F2;	# Unit: test1
Func Main;	# Unit: test1

Func F1:
	ASSIGN QW R0, 0x0F0E0D0C0B0A0908
	ASSIGN QW R8, 0x0102030405060708
	ASSIGN DW R16, 0x00002710
	MOVE DW R20, R0
	MOVE B  R20, R0
	MOVE W  R20, R0
	MOVE DW R20, R0
	MOVE QW R24, R0
	SWAP DW R20, R28
	SWAP B  R20, R28
	SWAP W  R20, R28
	SWAP DW R20, R28
	SWAP QW R16, R24
Label1:
	AND DW R0, R8
	AND B  R0, R8
	AND W  R0, R8
	AND DW R0, R8
	AND QW R0, R8
	JEQ Label2
	ADD DW R0, R8
	ADD B  R0, R8
	ADD W  R0, R8
	ADD DW R0, R8
	ADD QW R0, R8
Label2:
	PUSH DW R0, 0
	POP DW R28, 0
	PUSH B  R0, 0
	POP B  R28, 0
	PUSH W  R0, 0
	POP W  R28, 0
	PUSH DW R0, 0
	POP DW R28, 0
	PUSH QW R0, 0
	POP QW R24, 0
	GFLR R16
	SFLR R16
	RET
EndF

Func F2:
	PUSHSF 16
	INC A0, R0
	INC A0, 16
	DEC A4, 10
	DEC A4, R4
	STAE W  R8
	NOT W  R8
	ASSIGN B  R1, 4
	SHL W  R6, 5
	SHR W  R6, R2
	ROL W  R6, 7
	ROR W  R6, R2
	SAL W  R6, 3
	SAR W  R6, R2
	RCL W  R6, 1
	RCR W  R6, R2
	ADC DW R8, R12
	SBB DW R8, R12
	MUL DW R8, R12
	IMUL DW R8, R12
	DIV DW R8, R12
	IDIV DW R8, R12
	NEG QW R8
	CAST W DW R4
	CAST DW W R16
	ASSIGN A4, bVal1
	ASSIGN A5, wVal1
	ASSIGN A6, dwVal1
	ASSIGN A7, qwVal1
	LOAD B  R0, A4
	LOAD W  R0, A5
	LOAD DW R0, A6
	LOAD QW R0, A7
	STORE B  R10, A4
	STORE W  R10, A5
	STORE DW R12, A6
	STORE QW R16, A7
	LDREL DW A6, A2, 0x0000000A
	STREL DW A6, A2, 0xFFFFFFF6
	OUT DW R0, 0
	OUT W  R40, 1024
Loop:
	IN DW R0, 1
	IN W  R44, 4095
	BREAK
	ASSIGN DW R4, 0
	CMP DW R0, R4
	JNE Loop
	TEST DW R0, R0
	JEQ Exit
	BREAK
Exit:
	POPSF 8
	RET
EndF

Func Main:
	PUSHSF
	JUMP start
	NOP
	NOP
	NOP
start:
	ASSIGN A7, null
	ASSIGN A4, F1
	CALL A4
	ASSIGN A4, F2
	PUSH QW R0, 0
	CALL A4
	POPSF
	RET
EndF

.MAIN = Main
