#ifndef VASM_VM_LOADER_H
#define VASM_VM_LOADER_H

//
// Includes
//
#include "package_info.h"
#include <core_memory.h>
#include <base_utility.h>

// STL
#include <istream>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace vasm {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace vm {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using CMemoryPtr = core::CMemoryPtr;

////////////////////////////////////////////////////////////////////////////////
//
//	Loader
//	Loads package from the input stream into the memory and fills package info
//
class CLoader
{
public:
	CLoader();
	~CLoader();

	// Neither copiable, nor movable
	CLoader(CLoader const&) = delete;
	CLoader(CLoader&&) = delete;
	void operator=(CLoader const&) = delete;
	void operator=(CLoader&&) = delete;

public:
	//
	//	Methods
	//
	void Load(std::istream& input, CMemoryPtr pMemory, SPackageInfo& tPackageInfo);

protected:
	//
	//	Implementation
	//
	using SSectionInfo = core::SSectionInfo;

	void LoadSymbols   (std::istream& input, SPackageInfo& tPackageInfo, SSectionInfo const&,
						t_address nCodeBase, t_address nDataBase);
	void LoadDebuginfo (std::istream& input, SPackageInfo& tPackageInfo, SSectionInfo const&);
	void LoadIntoMemory(std::istream& input, CMemoryPtr pMemory, SSectionInfo const&, t_address nBase);

private:
	//
	//	Contents
	//
	std::vector<t_index> m_aSymbolToPackageFuncIdx;
};

using CLoaderPtr = std::shared_ptr<CLoader>;
using CLoaderWPtr = std::weak_ptr<CLoader>;
using CLoaderUPtr = std::unique_ptr<CLoader>;
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//	Inline Implementations
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace vm
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace vasm
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // VASM_VM_LOADER_H