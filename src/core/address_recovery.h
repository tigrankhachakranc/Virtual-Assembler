#ifndef VASM_CORE_ADDRESS_RECOVERY_H
#define VASM_CORE_ADDRESS_RECOVERY_H

//
// Includes
//
#include "command.h"
#include <base_utility.h>

// STL
#include <unordered_map>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace vasm {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace core {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//	Implementation of Address recovery 
//
class CAddressRecovery : public IAddressRecovery
{
public:
	// Address to symbol map (used by address recovery)
	using t_AddrssToSymbolMap = std::unordered_map<t_address, CStringRef>;

	CAddressRecovery(t_AddrssToSymbolMap&&);
	~CAddressRecovery() override;

	// Translates sepcified address to its original symbol
	t_string ToSymbol(core::t_address) const override;

private:
	t_AddrssToSymbolMap		m_mapSymbols;
};
using CAddressRecoveryPtr = std::shared_ptr<CAddressRecovery>;
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace core
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace vasm
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // VASM_CORE_ADDRESS_RECOVERY_H